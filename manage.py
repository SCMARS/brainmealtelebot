#!/usr/bin/env python3
import os
import sys
import signal
import subprocess
import time
import psutil

BOT_PROCESS = None
LOG_FILE = "bot.log"

def find_bot_process():
    """–ù–∞–π—Ç–∏ –ø—Ä–æ—Ü–µ—Å—Å –±–æ—Ç–∞"""
    for proc in psutil.process_iter(['pid', 'name', 'cmdline']):
        try:
            if 'python' in proc.info['name'].lower() and 'bot.main' in ' '.join(proc.info['cmdline']):
                return proc
        except (psutil.NoSuchProcess, psutil.AccessDenied):
            pass
    return None

def start_bot():
    """–ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞"""
    global BOT_PROCESS
    
    if find_bot_process():
        print("‚ùå –ë–æ—Ç —É–∂–µ –∑–∞–ø—É—â–µ–Ω")
        return
        
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ —Å –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º –≤—ã–≤–æ–¥–∞ –≤ –ª–æ–≥
        with open(LOG_FILE, 'a') as log_file:
            BOT_PROCESS = subprocess.Popen(
                [sys.executable, '-m', 'bot.main'],
                stdout=log_file,
                stderr=log_file,
                preexec_fn=os.setsid
            )
        print("‚úÖ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω")
        print(f"üìù –õ–æ–≥–∏ –∑–∞–ø–∏—Å—ã–≤–∞—é—Ç—Å—è –≤ {LOG_FILE}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞: {str(e)}")

def stop_bot():
    """–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞"""
    bot_process = find_bot_process()
    if not bot_process:
        print("‚ùå –ë–æ—Ç –Ω–µ –∑–∞–ø—É—â–µ–Ω")
        return
        
    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–∏–≥–Ω–∞–ª SIGTERM –≤—Å–µ–π –≥—Ä—É–ø–ø–µ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
        os.killpg(os.getpgid(bot_process.pid), signal.SIGTERM)
        print("‚úÖ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ –±–æ—Ç–∞: {str(e)}")

def restart_bot():
    """–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞"""
    print("üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
    stop_bot()
    time.sleep(2)  # –ñ–¥–µ–º, –ø–æ–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è
    start_bot()

def show_status():
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞"""
    bot_process = find_bot_process()
    if bot_process:
        print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")
        print(f"üìä PID: {bot_process.pid}")
        print(f"‚è±Ô∏è –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: {time.time() - bot_process.create_time():.0f} —Å–µ–∫—É–Ω–¥")
    else:
        print("‚ùå –ë–æ—Ç –Ω–µ –∑–∞–ø—É—â–µ–Ω")

def show_logs(lines=10):
    """–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏"""
    try:
        with open(LOG_FILE, 'r') as log_file:
            logs = log_file.readlines()
            print("üìù –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏:")
            print(''.join(logs[-lines:]))
    except FileNotFoundError:
        print("‚ùå –§–∞–π–ª –ª–æ–≥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    if len(sys.argv) < 2:
        print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:")
        print("  python manage.py start    - –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞")
        print("  python manage.py stop     - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞")
        print("  python manage.py restart  - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞")
        print("  python manage.py status   - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å")
        print("  python manage.py logs     - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏")
        return

    command = sys.argv[1].lower()
    
    if command == 'start':
        start_bot()
    elif command == 'stop':
        stop_bot()
    elif command == 'restart':
        restart_bot()
    elif command == 'status':
        show_status()
    elif command == 'logs':
        show_logs()
    else:
        print(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: {command}")

if __name__ == '__main__':
    main() 